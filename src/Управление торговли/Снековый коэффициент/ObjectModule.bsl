#Если Клиент Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт
	
	// Настройка общих параметров универсального отчета
	
	// Содержит название отчета, которое будет выводиться в шапке.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.мНазваниеОтчета = "Название отчета";
	УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним);
	
	// Содержит признак необходимости отображения надписи и поля выбора раздела учета в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.мВыбиратьИмяРегистра = Истина;
	УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	
	// Содержит имя регистра, по метаданным которого будет выполняться заполнение настроек отчета.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.ИмяРегистра = "ТоварыНаСкладах";
	УниверсальныйОтчет.ИмяРегистра = "";
	
	// Содержит признак необходимости вывода отрицательных значений показателей красным цветом.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ОтрицательноеКрасным = Истина;
	УниверсальныйОтчет.ОтрицательноеКрасным = Истина;
	
	// Содержит признак необходимости вывода в отчет общих итогов.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ВыводитьОбщиеИтоги = Ложь;
	
	// Содержит признак необходимости вывода детальных записей в отчет.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ВыводитьДетальныеЗаписи = Истина;
	
	// Содержит признак необходимости отображения флага использования свойств и категорий в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Ложь;
	УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Истина;
	
	// Содержит признак использования свойств и категорий при заполнении настроек отчета.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.ИспользоватьСвойстваИКатегории = Истина;
	//УниверсальныйОтчет.ИспользоватьСвойстваИКатегории = Истина;
	
	// Содержит признак использования простой формы настроек отчета без группировок колонок.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.мРежимФормыНастройкиБезГруппировокКолонок = Истина;
	
	// Дополнительные параметры, переданные из отчета, вызвавшего расшифровку.
	// Информация, передаваемая в переменной ДополнительныеПараметры, может быть использована
	// для реализации специфичных для данного отчета параметрических настроек.
	
	// Описание исходного текста запроса.
	// При написании текста запроса рекомендуется следовать правилам, описанным в следующем шаблоне текста запроса:
	//
	//ВЫБРАТЬ
	//	<ПсевдонимТаблицы.Поле> КАК <ПсевдонимПоля>,
	//	ПРЕДСТАВЛЕНИЕ(<ПсевдонимТаблицы>.<Поле>),
	//	<ПсевдонимТаблицы.Показатель> КАК <ПсевдонимПоказателя>
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//{ВЫБРАТЬ
	//	<ПсевдонимПоля>.*,
	//	<ПсевдонимПоказателя>,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	//ИЗ
	//	<Таблица> КАК <ПсевдонимТаблицы>
	//	//СОЕДИНЕНИЯ
	//{ГДЕ
	//	<ПсевдонимТаблицы.Поле>.* КАК <ПсевдонимПоля>,
	//	<ПсевдонимТаблицы.Показатель> КАК <ПсевдонимПоказателя>,
	//	<ПсевдонимТаблицы>.Регистратор КАК Регистратор,
	//	<ПсевдонимТаблицы>.Период КАК Период,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ДЕНЬ) КАК ПериодДень,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, НЕДЕЛЯ) КАК ПериодНеделя,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ДЕКАДА) КАК ПериодДекада,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, МЕСЯЦ) КАК ПериодМесяц,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, КВАРТАЛ) КАК ПериодКвартал,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ГОД) КАК ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	//{УПОРЯДОЧИТЬ ПО
	//	<ПсевдонимПоля>.*,
	//	<ПсевдонимПоказателя>,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//УПОРЯДОЧИТЬ_СВОЙСТВА
	//	//УПОРЯДОЧИТЬ_КАТЕГОРИИ
	//}
	//ИТОГИ
	//	АГРЕГАТНАЯ_ФУНКЦИЯ(<ПсевдонимПоказателя>)
	//	//ИТОГИ_СВОЙСТВА
	//	//ИТОГИ_КАТЕГОРИИ
	//ПО
	//	ОБЩИЕ
	//{ИТОГИ ПО
	//	<ПсевдонимПоля>.*,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	//АВТОУПОРЯДОЧИВАНИЕ
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ПродажиОбороты.Подразделение,
	               |	ПродажиОбороты.КоличествоОборот,
	               |	ПродажиОбороты.Регистратор,
	               |	ПродажиОбороты.Период,
	               |	НАЧАЛОПЕРИОДА(ПродажиОбороты.Период, ДЕНЬ) КАК ПериодДень,
	               |	НАЧАЛОПЕРИОДА(ПродажиОбороты.Период, НЕДЕЛЯ) КАК ПериодНеделя,
	               |	НАЧАЛОПЕРИОДА(ПродажиОбороты.Период, ДЕКАДА) КАК ПериодДекада,
	               |	НАЧАЛОПЕРИОДА(ПродажиОбороты.Период, МЕСЯЦ) КАК ПериодМесяц,
	               |	НАЧАЛОПЕРИОДА(ПродажиОбороты.Период, КВАРТАЛ) КАК ПериодКвартал,
	               |	НАЧАЛОПЕРИОДА(ПродажиОбороты.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
	               |	НАЧАЛОПЕРИОДА(ПродажиОбороты.Период, ГОД) КАК ПериодГод
	               |ПОМЕСТИТЬ ВТОбщийПролив
	               |ИЗ
	               |	РегистрНакопления.Продажи.Обороты(
	               |			&ДатаНачала,
	               |			&ДатаКонца,
	               |			Регистратор,
	               |			Номенклатура В ИЕРАРХИИ (&Розлив)
	               |				И Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) {(Подразделение).*, (Организация).*}) КАК ПродажиОбороты
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ПродажиОбороты.Подразделение,
	               |	ПродажиОбороты.КоличествоОборот,
	               |	ПродажиОбороты.Регистратор,
	               |	ПродажиОбороты.Период,
	               |	НАЧАЛОПЕРИОДА(ПродажиОбороты.Период, ДЕНЬ) КАК ПериодДень,
	               |	НАЧАЛОПЕРИОДА(ПродажиОбороты.Период, НЕДЕЛЯ) КАК ПериодНеделя,
	               |	НАЧАЛОПЕРИОДА(ПродажиОбороты.Период, ДЕКАДА) КАК ПериодДекада,
	               |	НАЧАЛОПЕРИОДА(ПродажиОбороты.Период, МЕСЯЦ) КАК ПериодМесяц,
	               |	НАЧАЛОПЕРИОДА(ПродажиОбороты.Период, КВАРТАЛ) КАК ПериодКвартал,
	               |	НАЧАЛОПЕРИОДА(ПродажиОбороты.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
	               |	НАЧАЛОПЕРИОДА(ПродажиОбороты.Период, ГОД) КАК ПериодГод
	               |ПОМЕСТИТЬ ВТПроливТОП
	               |ИЗ
	               |	РегистрНакопления.Продажи.Обороты(
	               |			&ДатаНачала,
	               |			&ДатаКонца,
	               |			Регистратор,
	               |			Номенклатура В ИЕРАРХИИ (&ВесовыеСнеки, &Холодильник)
	               |				И Номенклатура.БазоваяЕдиницаИзмерения = &кг
	               |				И Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) {(Подразделение).*, (Организация).*}) КАК ПродажиОбороты
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ПродажиОбороты.Подразделение,
	               |	ПродажиОбороты.КоличествоОборот * ЕСТЬNULL(ВЫРАЗИТЬ(ЗначенияСвойствОбъектов.Значение КАК ЧИСЛО(15, 3)), 0),
	               |	ПродажиОбороты.Регистратор,
	               |	ПродажиОбороты.Период,
	               |	НАЧАЛОПЕРИОДА(ПродажиОбороты.Период, ДЕНЬ),
	               |	НАЧАЛОПЕРИОДА(ПродажиОбороты.Период, НЕДЕЛЯ),
	               |	НАЧАЛОПЕРИОДА(ПродажиОбороты.Период, ДЕКАДА),
	               |	НАЧАЛОПЕРИОДА(ПродажиОбороты.Период, МЕСЯЦ),
	               |	НАЧАЛОПЕРИОДА(ПродажиОбороты.Период, КВАРТАЛ),
	               |	НАЧАЛОПЕРИОДА(ПродажиОбороты.Период, ПОЛУГОДИЕ),
	               |	НАЧАЛОПЕРИОДА(ПродажиОбороты.Период, ГОД)
	               |ИЗ
	               |	РегистрНакопления.Продажи.Обороты(
	               |			&ДатаНачала,
	               |			&ДатаКонца,
	               |			Регистратор,
	               |			Номенклатура В ИЕРАРХИИ (&ВесовыеСнеки, &Холодильник)
	               |				И Номенклатура.БазоваяЕдиницаИзмерения = &шт
	               |				И Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) {(Подразделение).*, (Организация).*}) КАК ПродажиОбороты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	               |		ПО ПродажиОбороты.Номенклатура = ЗначенияСвойствОбъектов.Объект
	               |			И (ЗначенияСвойствОбъектов.Свойство = &МаркетингОбъем)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ВложенныйЗапрос.Подразделение,
	               |	ВложенныйЗапрос.ОбщийПролив КАК ОбщийПролив,
	               |	ВложенныйЗапрос.ПроливТОП КАК ПроливТОП,
	               |	ВложенныйЗапрос.Процент КАК Процент,
	               |	ВложенныйЗапрос.Регистратор,
	               |	ВложенныйЗапрос.Период,
	               |	ВложенныйЗапрос.ПериодДень,
	               |	ВложенныйЗапрос.ПериодНеделя,
	               |	ВложенныйЗапрос.ПериодДекада,
	               |	ВложенныйЗапрос.ПериодМесяц,
	               |	ВложенныйЗапрос.ПериодКвартал,
	               |	ВложенныйЗапрос.ПериодПолугодие,
	               |	ВложенныйЗапрос.ПериодГод
	               |{ВЫБРАТЬ
	               |	Подразделение.*,
	               |	ОбщийПролив,
	               |	ПроливТОП,
	               |	Процент,
	               |	Регистратор.*,
	               |	Период,
	               |	ПериодДень,
	               |	ПериодНеделя,
	               |	ПериодДекада,
	               |	ПериодМесяц,
	               |	ПериодКвартал,
	               |	ПериодПолугодие,
	               |	ПериодГод}
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ВложенныйЗапрос.Подразделение КАК Подразделение,
	               |		ВложенныйЗапрос.ОбщийПролив КАК ОбщийПролив,
	               |		ВложенныйЗапрос.ПроливТОП КАК ПроливТОП,
	               |		ВЫБОР
	               |			КОГДА ЕСТЬNULL(ВложенныйЗапрос.ОбщийПролив, 0) = 0
	               |				ТОГДА 0
	               |			ИНАЧЕ ВЫРАЗИТЬ(100 * ВложенныйЗапрос.ПроливТОП / ВложенныйЗапрос.ОбщийПролив КАК ЧИСЛО(5, 2))
	               |		КОНЕЦ КАК Процент,
	               |		ВложенныйЗапрос.Регистратор КАК Регистратор,
	               |		ВложенныйЗапрос.Период КАК Период,
	               |		ВложенныйЗапрос.ПериодДень КАК ПериодДень,
	               |		ВложенныйЗапрос.ПериодНеделя КАК ПериодНеделя,
	               |		ВложенныйЗапрос.ПериодДекада КАК ПериодДекада,
	               |		ВложенныйЗапрос.ПериодМесяц КАК ПериодМесяц,
	               |		ВложенныйЗапрос.ПериодКвартал КАК ПериодКвартал,
	               |		ВложенныйЗапрос.ПериодПолугодие КАК ПериодПолугодие,
	               |		ВложенныйЗапрос.ПериодГод КАК ПериодГод
	               |	ИЗ
	               |		(ВЫБРАТЬ
	               |			ВложенныйЗапрос.Подразделение КАК Подразделение,
	               |			СУММА(ВложенныйЗапрос.ОбщийПролив) КАК ОбщийПролив,
	               |			СУММА(ВложенныйЗапрос.ПроливТОП) КАК ПроливТОП,
	               |			ВложенныйЗапрос.Регистратор КАК Регистратор,
	               |			ВложенныйЗапрос.Период КАК Период,
	               |			ВложенныйЗапрос.ПериодДень КАК ПериодДень,
	               |			ВложенныйЗапрос.ПериодНеделя КАК ПериодНеделя,
	               |			ВложенныйЗапрос.ПериодДекада КАК ПериодДекада,
	               |			ВложенныйЗапрос.ПериодМесяц КАК ПериодМесяц,
	               |			ВложенныйЗапрос.ПериодКвартал КАК ПериодКвартал,
	               |			ВложенныйЗапрос.ПериодПолугодие КАК ПериодПолугодие,
	               |			ВложенныйЗапрос.ПериодГод КАК ПериодГод
	               |		ИЗ
	               |			(ВЫБРАТЬ
	               |				ВТОбщийПролив.Подразделение КАК Подразделение,
	               |				ВТОбщийПролив.КоличествоОборот КАК ОбщийПролив,
	               |				0 КАК ПроливТОП,
	               |				ВТОбщийПролив.Регистратор КАК Регистратор,
	               |				ВТОбщийПролив.Период КАК Период,
	               |				ВТОбщийПролив.ПериодДень КАК ПериодДень,
	               |				ВТОбщийПролив.ПериодНеделя КАК ПериодНеделя,
	               |				ВТОбщийПролив.ПериодДекада КАК ПериодДекада,
	               |				ВТОбщийПролив.ПериодМесяц КАК ПериодМесяц,
	               |				ВТОбщийПролив.ПериодКвартал КАК ПериодКвартал,
	               |				ВТОбщийПролив.ПериодПолугодие КАК ПериодПолугодие,
	               |				ВТОбщийПролив.ПериодГод КАК ПериодГод
	               |			ИЗ
	               |				ВТОбщийПролив КАК ВТОбщийПролив
	               |			
	               |			ОБЪЕДИНИТЬ ВСЕ
	               |			
	               |			ВЫБРАТЬ
	               |				ВТПроливТОП.Подразделение,
	               |				0,
	               |				ВТПроливТОП.КоличествоОборот,
	               |				ВТПроливТОП.Регистратор,
	               |				ВТПроливТОП.Период,
	               |				ВТПроливТОП.ПериодДень,
	               |				ВТПроливТОП.ПериодНеделя,
	               |				ВТПроливТОП.ПериодДекада,
	               |				ВТПроливТОП.ПериодМесяц,
	               |				ВТПроливТОП.ПериодКвартал,
	               |				ВТПроливТОП.ПериодПолугодие,
	               |				ВТПроливТОП.ПериодГод
	               |			ИЗ
	               |				ВТПроливТОП КАК ВТПроливТОП) КАК ВложенныйЗапрос
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			ВложенныйЗапрос.Подразделение,
	               |			ВложенныйЗапрос.Регистратор,
	               |			ВложенныйЗапрос.Период,
	               |			ВложенныйЗапрос.ПериодДень,
	               |			ВложенныйЗапрос.ПериодНеделя,
	               |			ВложенныйЗапрос.ПериодДекада,
	               |			ВложенныйЗапрос.ПериодМесяц,
	               |			ВложенныйЗапрос.ПериодКвартал,
	               |			ВложенныйЗапрос.ПериодПолугодие,
	               |			ВложенныйЗапрос.ПериодГод) КАК ВложенныйЗапрос) КАК ВложенныйЗапрос
	               |{ГДЕ
	               |	ВложенныйЗапрос.Подразделение.*,
	               |	ВложенныйЗапрос.ОбщийПролив,
	               |	ВложенныйЗапрос.ПроливТОП,
	               |	ВложенныйЗапрос.Процент,
	               |	ВложенныйЗапрос.Регистратор.*,
	               |	ВложенныйЗапрос.Период,
	               |	ВложенныйЗапрос.ПериодДень,
	               |	ВложенныйЗапрос.ПериодНеделя,
	               |	ВложенныйЗапрос.ПериодДекада,
	               |	ВложенныйЗапрос.ПериодМесяц,
	               |	ВложенныйЗапрос.ПериодКвартал,
	               |	ВложенныйЗапрос.ПериодПолугодие,
	               |	ВложенныйЗапрос.ПериодГод}
	               |{УПОРЯДОЧИТЬ ПО
	               |	Подразделение.*,
	               |	ОбщийПролив,
	               |	ПроливТОП,
	               |	Процент,
	               |	Регистратор.*,
	               |	Период,
	               |	ПериодДень,
	               |	ПериодНеделя,
	               |	ПериодДекада,
	               |	ПериодМесяц,
	               |	ПериодКвартал,
	               |	ПериодПолугодие,
	               |	ПериодГод}
	               |ИТОГИ
	               |	СУММА(ОбщийПролив),
	               |	СУММА(ПроливТОП),
	               |	ВЫБОР
	               |		КОГДА ЕСТЬNULL(СУММА(ОбщийПролив), 0) = 0
	               |			ТОГДА 0
	               |		ИНАЧЕ ВЫРАЗИТЬ(1000 * СУММА(ПроливТОП) / СУММА(ОбщийПролив) КАК ЧИСЛО(10, 3))
	               |	КОНЕЦ КАК Процент
	               |ПО
	               |	ОБЩИЕ
	               |{ИТОГИ ПО
	               |	Подразделение.*,
	               |	Регистратор.*,
	               |	Период,
	               |	ПериодДень,
	               |	ПериодНеделя,
	               |	ПериодДекада,
	               |	ПериодМесяц,
	               |	ПериодКвартал,
	               |	ПериодПолугодие,
	               |	ПериодГод}
	               |АВТОУПОРЯДОЧИВАНИЕ";
	
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("Розлив",				Справочники.ИТИКонстанты.ГруппаРазливноеПиво.Указатель);
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("ВесовыеСнеки",			Справочники.ИТИКонстанты.ВесовыеСнеки.Указатель);
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("Холодильник",			Справочники.Номенклатура.НайтиПоКоду("00000000944").Ссылка);
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("ХолодильникПивоАрхив",	Справочники.Номенклатура.НайтиПоКоду("00000011112").Ссылка);
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("кг",					Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("166"));
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("шт",					Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("796"));
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("МаркетингОбъем",		ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("000000082"));
	// В универсальном отчете включен флаг использования свойств и категорий.
	Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
		
		// Добавление свойств и категорий поля запроса в таблицу полей.
		// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
		
		// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , <ПсевдонимПоля>, <Представление>, <Назначение>);
		
		//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!Пример
		//УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля( "РегЗаказы.Номенклатура" ,               "Номенклатура",               "Номенклатура",                ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Номенклатура);
		
		
		// Добавление свойств и категорий в исходный текст запроса.
		УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
		
	КонецЕсли;
		
	// Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	
	//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!Пример
	//УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "КоличествоОстаток",          "Количество");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ОбщийПролив",		"Общий");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПроливТОП",		"Вес. снеки");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Процент",			"Снековый коэф.");
	
	
	
	// Добавление показателей
	// Необходимо вызывать для каждого добавляемого показателя.
	// УниверсальныйОтчет.ДобавитьПоказатель(<ИмяПоказателя>, <ПредставлениеПоказателя>, <ВключенПоУмолчанию>, <Формат>, <ИмяГруппы>, <ПредставлениеГруппы>);
	
	//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!Пример
	//УниверсальныйОтчет.ДобавитьПоказатель("КоличествоОстаток", "Количество", Истина, "ЧЦ=15; ЧДЦ=3");
	УниверсальныйОтчет.ДобавитьПоказатель("ОбщийПролив",	"Общий",	Истина, "ЧЦ=15; ЧДЦ=3","Пролив","Пролив");
	УниверсальныйОтчет.ДобавитьПоказатель("ПроливТОП",		"Вес. снеки",	Истина, "ЧЦ=15; ЧДЦ=3","Пролив");
	УниверсальныйОтчет.ДобавитьПоказатель("Процент",		"Снековый коэф. гр./л.",		Истина, "ЧЦ=15; ЧДЦ=3");
	
	// Добавление предопределенных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	
	//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!Пример
	//УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Склад");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Подразделение");
	
	// Добавление предопределенных группировок колонок отчета.
	// Необходимо вызывать для каждой добавляемой группировки колонки.
	// УниверсальныйОтчет.ДобавитьИзмерениеКолонки(<ПутьКДанным>);
	
	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	// УниверсальныйОтчет.ДобавитьОтбор(<ПутьКДанным>);
	
	//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!Пример
	УниверсальныйОтчет.ДобавитьОтбор("Подразделение");
	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДанным>);
	
	// Установка представлений полей
	// УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	// Установка типов значений свойств в отборах отчета
	УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	// УниверсальныйОтчет.ДобавитьДополнительноеПоле(<ПутьКДанным>);
	
КонецПроцедуры // УстановитьНачальныеНастройки()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА 
	
// Процедура формирования отчета
//
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	
	// Перед формирование отчета можно установить необходимые параметры универсального отчета.
	
	УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент);

КонецПроцедуры // СформироватьОтчет()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обработки расшифровки
//
Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
	
	// Дополнительные параметры в расшифровывающий отчет можно передать
	// посредством инициализации переменной "ДополнительныеПараметры".
	
	ДополнительныеПараметры = Неопределено;
	УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру для сохранения настроек отчета
//
Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
	
	УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
	
КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки отчета из структуры сохраненных настроек
//
Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
	
КонецФункции // ВосстановитьНастройкиИзСтруктуры()

// Содержит значение используемого режима ввода периода.
// Тип: Число.
// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 4 - месяц, 5 - квартал, 6 - полугодие, 7 - год
// Значение по умолчанию: 0
// Пример:
УниверсальныйОтчет.мРежимВводаПериода = 0;

#КонецЕсли
