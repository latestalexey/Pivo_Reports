////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	РегламентированнаяОтчетность.ПередОткрытиемОсновнойФормыРегламентиованногоОтчета(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	// Устнавливаем границы периода построения отчета как квартал
	// предшествующий текущему, нарастающим итогом с начала года.
	Если НЕ ЗначениеЗаполнено(мДатаНачалаПериодаОтчета) И НЕ ЗначениеЗаполнено(мДатаКонцаПериодаОтчета) Тогда
		мДатаКонцаПериодаОтчета  = КонецМесяца(ДобавитьМесяц(КонецКвартала(РабочаяДата), -3));
		мДатаНачалаПериодаОтчета = НачалоМесяца(мДатаКонцаПериодаОтчета);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(мПериодичность) ИЛИ НЕ (мПериодичность = Перечисления.Периодичность.Месяц ИЛИ мПериодичность = Перечисления.Периодичность.Квартал) Тогда
		мПериодичность = Перечисления.Периодичность.Квартал;
	КонецЕсли;
	ПолеВыбораПериодичность = мПериодичность;
	
	ПоказатьПериод();
	ИзменитьПериод(0);
	
	Если НЕ мТаблицаФормОтчета.Количество() > 1 Тогда
		ЭлементыФормы.КнопкаВыбораФормы.Доступность = Ложь;
	КонецЕсли;
	
	Если Организация = Справочники.Организации.ПустаяСсылка() Тогда
		ОргПоУмолчанию = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
		Если ЗначениеЗаполнено(ОргПоУмолчанию) Тогда
			Организация = ОргПоУмолчанию;
		КонецЕсли;
	КонецЕсли;
	
	УчетПоВсемОрганизациям = РегламентированнаяОтчетность.ПолучитьПризнакУчетаПоВсемОрганизациям();
	ЭлементыФормы.Организация.ТолькоПросмотр = НЕ УчетПоВсемОрганизациям;
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

Процедура ПолеВыбораПериодичностьПриИзменении(Элемент)
	
	Если ПолеВыбораПериодичность = Перечисления.Периодичность.Квартал Тогда
		мДатаКонцаПериодаОтчета  = КонецКвартала(мДатаКонцаПериодаОтчета);
		мДатаНачалаПериодаОтчета = НачалоКвартала(мДатаКонцаПериодаОтчета);
	Иначе
		мДатаКонцаПериодаОтчета  = КонецМесяца(мДатаКонцаПериодаОтчета);
		мДатаНачалаПериодаОтчета = НачалоМесяца(мДатаКонцаПериодаОтчета);
	КонецЕсли;
	
	мПериодичность = ПолеВыбораПериодичность;
	ИзменитьПериод(0);
	ПоказатьПериод();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

Процедура КнопкаПредыдущийПериодНажатие(Элемент)
	
	ИзменитьПериод(-1);
	
КонецПроцедуры

Процедура КнопкаСледующийПериодНажатие(Элемент)
	
	ИзменитьПериод(1);
	
КонецПроцедуры

Процедура КнопкаВыбораФормыНажатие(Элемент)
	
	ВыбраннаяФорма = РегламентированнаяОтчетность.ВыбратьФормуОтчетаИзДействующегоСписка(ЭтаФорма);
	Если ВыбраннаяФорма <> Неопределено Тогда
		мВыбраннаяФорма = ВыбраннаяФорма;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОсновныеДействияФормыОК(Кнопка)
	
	Если мСкопированаФорма <> Неопределено Тогда
		Если мВыбраннаяФорма <> мСкопированаФорма Тогда
			Если (мВыбраннаяФорма = "ФормаОтчета2006Кв3")
				И (мСкопированаФорма = "ФормаОтчета2006Кв2") Тогда
				КонвертироватьСтруктуруДанныхКв2ВКв3();
			Иначе
				Предупреждение("Форма отчета изменилась, копирование невозможно!");
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Сообщить(РегламентированнаяОтчетность.ОсновнаяФормаОрганизацияНеЗаполненаВывестиТекст(), СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	
	ДатаПодписи = РабочаяДата;
	
	ВыбФормаОтчета = ПолучитьФорму(мВыбраннаяФорма);
	РегламентированнаяОтчетность.ДобавитьНадписьВнешнийОтчет(ВыбФормаОтчета);
	ВыбФормаОтчета.РежимВыбора = Ложь;
	ВыбФормаОтчета.Организация = Организация;
	
	ЭтаФорма.Закрыть();
	
	ВыбФормаОтчета.Открыть();
	ВыбФормаОтчета.Модифицированность = Истина;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ПоказатьПериодОтчета(НарастающийИтог)

	Если НарастающийИтог Тогда
		Если ПолеВыбораПериодичность = Перечисления.Периодичность.Квартал Тогда  // ежеквартально
			СтрПериодОтчета = ПредставлениеПериода(НачалоДня(мДатаНачалаПериодаОтчета), КонецДня(мДатаКонцаПериодаОтчета), "ФП = Истина" );
		Иначе
			Если Месяц(мДатаКонцаПериодаОтчета) = 1 Тогда 
				СтрПериодОтчета = Формат(мДатаКонцаПериодаОтчета, "ДФ='ММММ гггг'") + " г." ;
			Иначе
				СтрПериодОтчета = "Январь - " + Формат(мДатаКонцаПериодаОтчета, "ДФ='ММММ гггг'") + " г." ;
			КонецЕсли;
		
		КонецЕсли;

		// Покажем период в диалоге
		ЭлементыФормы.НадписьПериодСоставленияОтчета.Заголовок = СтрПериодОтчета;

	Иначе
		СтрПериодОтчета = ПредставлениеПериода(НачалоДня(мДатаНачалаПериодаОтчета), КонецДня(мДатаКонцаПериодаОтчета), "ФП = Истина" );

		// Покажем период в диалоге
		ЭлементыФормы.НадписьПериодСоставленияОтчета.Заголовок = СтрПериодОтчета;

	КонецЕсли;

	КоличествоФорм = РегламентированнаяОтчетность.КоличествоФормСоответствующихВыбранномуПериоду(ЭтаФорма);
	Если КоличествоФорм >= 1 Тогда

		Если КоличествоФорм > 1 Тогда
			ЭлементыФормы.КнопкаВыбораФормы.Доступность = Истина;
		Иначе
			ЭлементыФормы.КнопкаВыбораФормы.Доступность = Ложь;
		КонецЕсли;

		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОК.Доступность = Истина;

	Иначе
		ЭлементыФормы.КнопкаВыбораФормы.Доступность = Ложь;
		ЭлементыФормы.ОписаниеНормативДок.Значение = "";
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОК.Доступность = Ложь;
	КонецЕсли;

	РегламентированнаяОтчетность.ВыборФормыРегламентированногоОтчетаПоУмолчанию(ЭтаФорма);


КонецПроцедуры // ПоказатьПериод()

Процедура ПоказатьПериод()

	НарастающийИтог = ПолучитьПризнакНарастающегоИтога(ПолучитьФормуДляПериода(мДатаКонцаПериодаОтчета));
	ПоказатьПериодОтчета(НарастающийИтог);
	
КонецПроцедуры // ПоказатьПериод

Процедура УстановитьДатыНачалаИКонцаОтчетногоПериода(НарастающийИтог, Шаг)

	Если ПолеВыбораПериодичность = Перечисления.Периодичность.Квартал Тогда  // ежеквартально
		Если НарастающийИтог Тогда
			мДатаКонцаПериодаОтчета  = КонецКвартала(ДобавитьМесяц(мДатаКонцаПериодаОтчета, Шаг * 3));
			мДатаНачалаПериодаОтчета = НачалоГода(мДатаКонцаПериодаОтчета);
		Иначе
			мДатаКонцаПериодаОтчета  = КонецКвартала(ДобавитьМесяц(мДатаКонцаПериодаОтчета, Шаг * 3));
			мДатаНачалаПериодаОтчета = НачалоКвартала(мДатаКонцаПериодаОтчета);
		КонецЕсли;
	Иначе
		Если НарастающийИтог Тогда
			мДатаКонцаПериодаОтчета  = КонецМесяца(ДобавитьМесяц(мДатаКонцаПериодаОтчета, Шаг));
			мДатаНачалаПериодаОтчета = НачалоГода(мДатаКонцаПериодаОтчета);
		Иначе
			мДатаКонцаПериодаОтчета  = КонецМесяца(ДобавитьМесяц(мДатаКонцаПериодаОтчета, Шаг));
			мДатаНачалаПериодаОтчета = НачалоМесяца(мДатаКонцаПериодаОтчета);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры // УстановитьДатыНачалаИКонцаОтчетногоПериода

// Устанавливает границы периода построения отчета.
//
// Параметры:
//  Шаг          - число, количество стандартных периодов, на которое необходимо
//                 сдвигать период построения отчета;
//
Процедура ИзменитьПериод(Шаг)

	НарастающийИтог = ПолучитьПризнакНарастающегоИтога(ПолучитьФормуДляПериода(мДатаКонцаПериодаОтчета));
	УстановитьДатыНачалаИКонцаОтчетногоПериода(НарастающийИтог, Шаг);

	НарастающийИтогПослеСменыДат = ПолучитьПризнакНарастающегоИтога(ПолучитьФормуДляПериода(мДатаКонцаПериодаОтчета));
	Если НарастающийИтогПослеСменыДат <> НарастающийИтог Тогда
		УстановитьДатыНачалаИКонцаОтчетногоПериода(НарастающийИтогПослеСменыДат, 0);
	КонецЕсли;
	
	УстановитьДоступностьПоляВыбораПериодичности();
	ПоказатьПериод();
	
КонецПроцедуры

Процедура КонвертироватьСтруктуруДанныхКв2ВКв3()
	// Изменим форму.
	мВыбраннаяФорма = "ФормаОтчета2006Кв3";
	мСохраненныйДок.ВыбраннаяФорма = мВыбраннаяФорма;
	СтруктураОтчета = мСохраненныйДок.ДанныеОтчета.Получить();
	// Титульный лист был в показателях отчета.
	ПоказателиОтчета = РегламентированнаяОтчетность.СкопированнаяСтруктура(СтруктураОтчета.ПоказателиОтчета);

	// Получим эталонную таблицу многостраничного раздела, без многострочной части (титульный лист).
	ТаблицаМногостраничногоРаздела = РегламентированнаяОтчетность.ПолучитьТаблицуМногостраничногоРаздела();
	// Запишем в полученную таблицу в первый экземпляр структуру титульного листа.
	ТаблицаМногостраничногоРаздела[0].Данные = РегламентированнаяОтчетность.СкопированнаяСтруктура(ПоказателиОтчета.ПолеТабличногоДокументаТитульный);
	// Удалим из структуры ПоказателиОтчета данные по многостраничному титульному листу.
	СтруктураОтчета.ПоказателиОтчета.Удалить("ПолеТабличногоДокументаТитульный");
	// Изменим структуру многостраничного раздела, добавив таблицу титульного листа.
	СтруктураОтчета.ДанныеМногостраничныхРазделов.Вставить("Титульный", ТаблицаМногостраничногоРаздела);

	ХранилищеДанных = Новый ХранилищеЗначения(СтруктураОтчета);
	мСохраненныйДок.ДанныеОтчета = ХранилищеДанных;

КонецПроцедуры

Функция ПолучитьВерсиюФорматаВыгрузки(Знач НаДату = Неопределено) Экспорт
	
	Если НаДату = Неопределено Тогда
		НаДату = РабочаяДата;
	КонецЕсли;
	
	Если НаДату < '20060101' Тогда
		Возврат Перечисления.ВерсииФорматовВыгрузки.Версия201алко;
	ИначеЕсли НаДату >= '20110301' Тогда
		Возврат Перечисления.ВерсииФорматовВыгрузки.Версия401алко;
	Иначе
		Если мСохраненныйДок.ВыбраннаяФорма = "ФормаОтчета2006Кв1" Тогда
			Возврат Неопределено;
		ИначеЕсли мСохраненныйДок.ВыбраннаяФорма = "ФормаОтчета2006Кв2" Тогда
			Возврат Неопределено;
		Иначе
			Возврат Перечисления.ВерсииФорматовВыгрузки.Версия302алко;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьФормуДляПериода(НаДату) Экспорт
	
	Для Каждого Строка Из мТаблицаФормОтчета Цикл
		Если (Строка.ДатаНачалоДействия > КонецДня(НаДату)) ИЛИ
			((Строка.ДатаКонецДействия > '00010101000000') И (Строка.ДатаКонецДействия < НачалоДня(НаДату))) Тогда

			Продолжить;
		КонецЕсли;

		мВыбраннаяФорма = Строка.ФормаОтчета;

		Возврат мВыбраннаяФорма;
	КонецЦикла;

	// Если не удалось найти форму, соответствующую выбранному периоду,
	// то по умолчанию выдаем текущую (действующую) форму.
	Если мВыбраннаяФорма = Неопределено Тогда
		мВыбраннаяФорма = мТаблицаФормОтчета[0].ФормаОтчета;
	КонецЕсли;
	
	Возврат мВыбраннаяФорма;

КонецФункции

Функция ПолучитьПризнакНарастающегоИтога(ВыбраннаяФормаОтчета) Экспорт

	НайденнаяСтрока = мТаблицаФормОтчета.Найти(ВыбраннаяФормаОтчета, "ФормаОтчета");
	Если НайденнаяСтрока <> Неопределено Тогда
		Возврат НайденнаяСтрока.НарастающийИтог;
	Иначе
		Возврат Истина;
	КонецЕсли;

КонецФункции // ПолучитьПризнакНарастающегоИтога

Процедура УстановитьДоступностьПоляВыбораПериодичности()
	
	Если мДатаНачалаПериодаОтчета >= '2012-07-01' Тогда
		мПериодичность = Перечисления.Периодичность.Квартал;
		ПолеВыбораПериодичность = мПериодичность;
		ЭлементыФормы.ПолеВыбораПериодичность.Доступность = Ложь;
	Иначе
		ЭлементыФормы.ПолеВыбораПериодичность.Доступность = Истина;
	КонецЕсли;
	
КонецПроцедуры

ЭлементыФормы.ПолеВыбораПериодичность.СписокВыбора.Добавить(Перечисления.Периодичность.Месяц,   "Ежемесячно");
ЭлементыФормы.ПолеВыбораПериодичность.СписокВыбора.Добавить(Перечисления.Периодичность.Квартал, "Ежеквартально");
