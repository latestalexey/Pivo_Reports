#Если Клиент Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА

// Процедура установки начальных настроек отчета по метаданным регистра накопления
//
Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт
	
	// Настройка общих параметров универсального отчета
	УправлениеОтчетами.ВосстановитьРеквизитыОтчета(ЭтотОбъект, ДополнительныеПараметры);
	
	УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним);
	
	УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	
	УниверсальныйОтчет.ИмяРегистра = "";
	
	УниверсальныйОтчет.ОтрицательноеКрасным = Истина;
	
	УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Истина;
	//Оригинальный запрос
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИсточникДанных.Подразделение 		КАК Подразделение,
	|	ПРЕДСТАВЛЕНИЕ(ИсточникДанных.Подразделение),
	|	ИсточникДанных.СтатьяЗатрат 		КАК СтатьяЗатрат,
	|	ПРЕДСТАВЛЕНИЕ(ИсточникДанных.СтатьяЗатрат),
	|	ИсточникДанных.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	ПРЕДСТАВЛЕНИЕ(ИсточникДанных.НоменклатурнаяГруппа),
	|	ИсточникДанных.Заказ 				КАК Заказ,
	|	ПРЕДСТАВЛЕНИЕ(ИсточникДанных.Заказ),
	|	ИсточникДанных.Суммаоборот 			КАК СуммаОборот,
	|	ИсточникДанных.Регистратор 			КАК Регистратор,
	|	ПРЕДСТАВЛЕНИЕ(ИсточникДанных.Регистратор),
	|	ЕстьNull(ИсточникДанных.Регистратор.ЭтоИнвестиции,ЛОЖЬ) КАК ЭтоИнвестиции,
	|	ИсточникДанных.Период 	КАК Период,
	|	НачалоПериода(ИсточникДанных.Период, День) 		КАК ПериодДень,
	|	НачалоПериода(ИсточникДанных.Период, Неделя) 	КАК ПериодНеделя,
	|	НачалоПериода(ИсточникДанных.Период, Декада) 	КАК ПериодДекада,
	|	НачалоПериода(ИсточникДанных.Период, Месяц) 	КАК ПериодМесяц,
	|	НачалоПериода(ИсточникДанных.Период, Квартал) 	КАК ПериодКвартал,
	|	НачалоПериода(ИсточникДанных.Период, Полугодие) КАК ПериодПолугодие,
	|	НачалоПериода(ИсточникДанных.Период, Год) 		КАК ПериодГод
	|	//ПОЛЯ_СВОЙСТВА
	|	//ПОЛЯ_КАТЕГОРИИ
	|{ВЫБРАТЬ
	|	Подразделение.*,
	|	СтатьяЗатрат.*,
	|	НоменклатурнаяГруппа.*,
	|	Заказ.*,
	|	СуммаОборот,
	|	Регистратор.* КАК Регистратор,
	|	ЭтоИнвестиции КАК ЭтоИнвестиции,
	|	Период КАК Период,
	|	ПериодДень,
	|	ПериодНеделя,
	|	ПериодДекада,
	|	ПериодМесяц,
	|	ПериодКвартал,
	|	ПериодПолугодие,
	|	ПериодГод
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}

	|ИЗ РегистрНакопления.Затраты.Обороты(&ДатаНач, &ДатаКон, Регистратор {&Периодичность}, {
	|		Подразделение.* КАК Подразделение,
	|		СтатьяЗатрат.* КАК СтатьяЗатрат,
	|		НоменклатурнаяГруппа.* КАК НоменклатурнаяГруппа,
	|		Заказ.* КАК Заказ}) КАК ИсточникДанных
	|//СОЕДИНЕНИЯ
	|{ГДЕ
	|	ИсточникДанных.СуммаОборот КАК СуммаОборот,
	|	ИсточникДанных.Регистратор.* КАК Регистратор,
	|	ЕстьNull(ИсточникДанных.Регистратор.ЭтоИнвестиции,ЛОЖЬ) КАК ЭтоИнвестиции,
	|	ИсточникДанных.Период КАК Период,
	|	НачалоПериода(ИсточникДанных.Период, День) КАК ПериодДень,
	|	НачалоПериода(ИсточникДанных.Период, Неделя) КАК ПериодНеделя,
	|	НачалоПериода(ИсточникДанных.Период, Декада) КАК ПериодДекада,
	|	НачалоПериода(ИсточникДанных.Период, Месяц) КАК ПериодМесяц,
	|	НачалоПериода(ИсточникДанных.Период, Квартал) КАК ПериодКвартал,
	|	НачалоПериода(ИсточникДанных.Период, Полугодие) КАК ПериодПолугодие,
	|	НачалоПериода(ИсточникДанных.Период, Год) КАК ПериодГод
	|	//УСЛОВИЯ_СВОЙСТВА
	|	//УСЛОВИЯ_КАТЕГОРИИ
	|}
	|{УПОРЯДОЧИТЬ ПО
	|	Подразделение.*,
	|	СтатьяЗатрат.*,
	|	НоменклатурнаяГруппа.*,
	|	Заказ.*,
	|	СуммаОборот,
	|	Регистратор.*,
	|	Период,
	|	ПериодДень,
	|	ПериодНеделя,
	|	ПериодДекада,
	|	ПериодМесяц,
	|	ПериодКвартал,
	|	ПериодПолугодие,
	|	ПериодГод
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}
	|ИТОГИ
	|	СУММА(СуммаОборот)
	|	//ИТОГИ_СВОЙСТВА
	|	//ИТОГИ_КАТЕГОРИИ
	|ПО
	|	ОБЩИЕ
	|{ИТОГИ ПО
	|	Подразделение.*,
	|	СтатьяЗатрат.*,
	|	НоменклатурнаяГруппа.*,
	|	Заказ.*,
	|	Регистратор.*,
	|	ЭтоИнвестиции,
	|	Период,
	|	ПериодДень,
	|	ПериодНеделя,
	|	ПериодДекада,
	|	ПериодМесяц,
	|	ПериодКвартал,
	|	ПериодПолугодие,
	|	ПериодГод
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}	
	|";
	
	
	
	//МОЙ БОЛЬШОЙ И СТРАШНЫЙ ЗАПРОС
	
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИсточникДанных.Подразделение 		КАК Подразделение,
	|	ПРЕДСТАВЛЕНИЕ(ИсточникДанных.Подразделение),
	|	ИсточникДанных.СтатьяЗатрат 		КАК СтатьяЗатрат,
	|	ПРЕДСТАВЛЕНИЕ(ИсточникДанных.СтатьяЗатрат),
	|	ИсточникДанных.Номенклатура КАК Номенклатура,
	|	ПРЕДСТАВЛЕНИЕ(ИсточникДанных.Номенклатура),
	|	ИсточникДанных.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	ПРЕДСТАВЛЕНИЕ(ИсточникДанных.НоменклатурнаяГруппа),
	|	ИсточникДанных.Суммаоборот			КАК СуммаОборот,
	|	ИсточникДанных.ЭтоИнвестиции КАК ЭтоИнвестиции
	|	//%СуммаОборотПрошлые%
	|	//ПОЛЯ_СВОЙСТВА
	|	//ПОЛЯ_КАТЕГОРИИ
	|{ВЫБРАТЬ
	|	Подразделение.*,
	|	СтатьяЗатрат.*,
	|	НоменклатурнаяГруппа.*,
	|	СуммаОборот,
	|	ЭтоИнвестиции
	|	//%СуммаОборотПрошлыеПсевдонимы%
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}
	|ИЗ 
	|	(ВЫБРАТЬ
	|		ВложенныйЗапрос.Подразделение,
	|		ВложенныйЗапрос.СтатьяЗатрат,
	|		ВложенныйЗапрос.Номенклатура,
	|		ВложенныйЗапрос.ЭтоИнвестиции,
	|		ВложенныйЗапрос.НоменклатурнаяГруппа,
	|		СУММА(ВложенныйЗапрос.СуммаОборот) КАК СуммаОборот
	|		//%СУММА(СуммыПрошлыхПериодовВложЗапрос)%
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ИсточникЗатраты.Подразделение КАК Подразделение,
	|			ИсточникЗатраты.СтатьяЗатрат КАК СтатьяЗатрат,
	|			ЕстьNull(ИсточникЗатраты.Регистратор.ЭтоИнвестиции,ЛОЖЬ) КАК ЭтоИнвестиции,
	|			ВЫБОР КОГДА ИсточникЗатраты.Регистратор ССЫЛКА Документ.ТребованиеНакладная ТОГДА
	|				ЕСТЬNULL(ТребованиеНакладнаяМатериалы.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) 
	|			КОГДА ИсточникЗатраты.Регистратор ССЫЛКА Документ.АвансовыйОтчет ТОГДА
	|				ЕСТЬNULL(ВЫРАЗИТЬ(АвансовыйОтчетПрочее.Содержание КАК СТРОКА(100)), """")
	|			КОГДА ИсточникЗатраты.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг ТОГДА
	|				ЕСТЬNULL(ВЫРАЗИТЬ(ПоступлениеТоваровУслуг.Содержание КАК СТРОКА(100)), """")
	|			КОНЕЦ КАК Номенклатура,
	|			ИсточникЗатраты.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|			ИсточникЗатраты.СуммаОборот КАК СуммаОборот
	|			//%НулиПрошлыхПериодов%
	|		ИЗ
	|			РегистрНакопления.Затраты.Обороты(&ДатаНач, &ДатаКон, Запись , {(Подразделение).* КАК Подразделение, (СтатьяЗатрат).* КАК СтатьяЗатрат, (НоменклатурнаяГруппа).* КАК НоменклатурнаяГруппа, (Заказ).* КАК Заказ}) КАК ИсточникЗатраты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТребованиеНакладная.Материалы КАК ТребованиеНакладнаяМатериалы
	|		ПО ИсточникЗатраты.Регистратор = ТребованиеНакладнаяМатериалы.Ссылка
	|			И ИсточникЗатраты.НомерСтроки = ТребованиеНакладнаяМатериалы.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.АвансовыйОтчет.Прочее КАК АвансовыйОтчетПрочее
	|		ПО ИсточникЗатраты.Регистратор = АвансовыйОтчетПрочее.Ссылка
	|			И ИсточникЗатраты.НомерСтроки = АвансовыйОтчетПрочее.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслуг
	|		ПО ИсточникЗатраты.Регистратор = ПоступлениеТоваровУслуг.Ссылка
	|			И ИсточникЗатраты.НомерСтроки = ПоступлениеТоваровУслуг.НомерСтроки
	| 
	|		//%ОБЪЕДИНИТЬ ВСЕ%
	|		) КАК ВложенныйЗапрос
    |
	|	СГРУППИРОВАТЬ ПО
	|		ВложенныйЗапрос.Подразделение,
	|		ВложенныйЗапрос.СтатьяЗатрат,
	|		ВложенныйЗапрос.Номенклатура,
	|		ВложенныйЗапрос.НоменклатурнаяГруппа, ВложенныйЗапрос.ЭтоИнвестиции) КАК ИсточникДанных
	|//СОЕДИНЕНИЯ
	|{ГДЕ
	|	ИсточникДанных.Подразделение.* КАК Подразделение,
	|	ИсточникДанных.СтатьяЗатрат КАК СтатьяЗатрат,
	|	ИсточникДанных.Номенклатура КАК Номенклатура,
	|	ИсточникДанных.ЭтоИнвестиции,
	|	ИсточникДанных.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа
	|	//УСЛОВИЯ_СВОЙСТВА
	|	//УСЛОВИЯ_КАТЕГОРИИ
	|}
	|{УПОРЯДОЧИТЬ ПО
	|	Подразделение.*,
	|	СтатьяЗатрат.*,
	|	Номенклатура.*,
	|	НоменклатурнаяГруппа.*
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}
	|ИТОГИ
	|	СУММА(СуммаОборот)
	|   //%СУММА(СуммыПрошлыхПериодов)%
	|	//ИТОГИ_СВОЙСТВА
	|	//ИТОГИ_КАТЕГОРИИ
	|ПО
	|	ОБЩИЕ
	|{ИТОГИ ПО
	|	Подразделение.*,
	|	СтатьяЗатрат.*,
	|	Номенклатура.*,
	|	ЭтоИнвестиции,
	|	НоменклатурнаяГруппа.*
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}	
	|";
	
	Если ПериодыСравнения.Количество() Тогда
		КолВоПериодов=ПериодыСравнения.Количество()-1;
		//БЛОК СБОРА ДАННЫХ ПРЕДЫДУЩИХ ПЕРИОДОВ
	
		//СуммаОборотПрошлые
		Кусок="";
		Для Сч=0 По КолВоПериодов Цикл
			Индекс=Строка(Сч);
			Кусок=Кусок+","+"ИсточникДанных.СуммаОборот"+Индекс+" КАК СуммаОборот"+Индекс+",";
			Кусок=Кусок+"ИсточникДанных.СуммаОборот-ИсточникДанных.СуммаОборот"+Индекс+" КАК Дельта"+Индекс+",";
			Кусок=Кусок+"100*ВЫБОР КОГДА ЕстьNull(ИсточникДанных.СуммаОборот"+Индекс+",0)=0 ТОГДА 1 ИНАЧЕ (ИсточникДанных.СуммаОборот-ИсточникДанных.СуммаОборот"+Индекс+")/ИсточникДанных.СуммаОборот"+Индекс+" КОНЕЦ КАК ДельтаПроцент"+Индекс;
		КонецЦикла;
		ТекстЗапроса=СтрЗаменить(ТекстЗапроса,"//%СуммаОборотПрошлые%",Кусок);
		
		//СуммаОборотПрошлыеПсевдонимы
		Кусок="";
		Для Сч=0 По КолВоПериодов Цикл
			Индекс=Строка(Сч);
			Кусок=Кусок+","+"СуммаОборот"+Индекс+",";
			Кусок=Кусок+"Дельта"+Индекс+",";
			Кусок=Кусок+"ДельтаПроцент"+Индекс;
		КонецЦикла;
		ТекстЗапроса=СтрЗаменить(ТекстЗапроса,"//%СуммаОборотПрошлыеПсевдонимы%",Кусок);
		
		//СУММА(СуммыПрошлыхПериодовВложЗапрос)
		Кусок="";
		Для Сч=0 По КолВоПериодов Цикл
			Индекс=Строка(Сч);
			Кусок=Кусок+","+"СУММА(СуммаОборот"+Индекс+")";
		КонецЦикла;
		ТекстЗапроса=СтрЗаменить(ТекстЗапроса,"//%СУММА(СуммыПрошлыхПериодовВложЗапрос)%",Кусок);
		
		//НулиПрошлыхПериодов
		Кусок="";
		Для Сч=0 По КолВоПериодов Цикл
			Индекс=Строка(Сч);
			Кусок=Кусок+","+"0 КАК СуммаОборот"+Индекс;
		КонецЦикла;
		ТекстЗапроса=СтрЗаменить(ТекстЗапроса,"//%НулиПрошлыхПериодов%",Кусок);
		
		//ОБЪЕДИНИТЬ ВСЕ
		Кусок="";
		Для Сч=0 По КолВоПериодов Цикл
			Индекс=Строка(Сч);
			Кусок=Кусок+" ОБЪЕДИНИТЬ ВСЕ
						|	ВЫБРАТЬ
			            |	ИсточникЗатраты.Подразделение КАК Подразделение,
			            |	ИсточникЗатраты.СтатьяЗатрат КАК СтатьяЗатрат,
						|	ЕстьNull(ИсточникЗатраты.Регистратор.ЭтоИнвестиции,ЛОЖЬ) КАК ЭтоИнвестиции,
						|	ВЫБОР КОГДА ИсточникЗатраты.Регистратор ССЫЛКА Документ.ТребованиеНакладная ТОГДА
	               		|		ЕСТЬNULL(ТребованиеНакладнаяМатериалы.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) 
				   		|	КОГДА ИсточникЗатраты.Регистратор ССЫЛКА Документ.АвансовыйОтчет ТОГДА
				   		|		ЕСТЬNULL(ВЫРАЗИТЬ(АвансовыйОтчетПрочее.Содержание КАК СТРОКА(100)), """")
				   		|	КОГДА ИсточникЗатраты.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг ТОГДА
				   		|		ЕСТЬNULL(ВЫРАЗИТЬ(ПоступлениеТоваровУслуг.Содержание КАК СТРОКА(100)), """")
				   		|	КОНЕЦ КАК Номенклатура,
			            |	ИсточникЗатраты.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
						|	0 КАК СуммаОборот";
						Для Сч2=0 ПО Сч-1 Цикл
							Кусок=Кусок+", 0 КАК СуммаОборот"+Строка(Сч2);
						КонецЦикла;
						//Отбивка 0 предыдущих периодов
						Кусок=Кусок+",
			            |	ИсточникЗатраты.СуммаОборот КАК СуммаОборот"+Индекс;
						//Отбивка 0 последующих периодов
						Для Сч2=Сч+1 По КолВоПериодов Цикл
							Кусок=Кусок+", 0 КАК СуммаОборот"+Строка(Сч2);
						КонецЦикла;
						Кусок=Кусок+"
			            |ИЗ
			            |	РегистрНакопления.Затраты.Обороты(&ДатаНач"+Индекс+", &ДатаКон"+Индекс+", Запись, {(Подразделение).* КАК Подразделение, (СтатьяЗатрат).* КАК СтатьяЗатрат, (НоменклатурнаяГруппа).* КАК НоменклатурнаяГруппа, (Заказ).* КАК Заказ}) КАК ИсточникЗатраты
						|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТребованиеНакладная.Материалы КАК ТребованиеНакладнаяМатериалы
						|		ПО ИсточникЗатраты.Регистратор = ТребованиеНакладнаяМатериалы.Ссылка
						|			И ИсточникЗатраты.НомерСтроки = ТребованиеНакладнаяМатериалы.НомерСтроки
						|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.АвансовыйОтчет.Прочее КАК АвансовыйОтчетПрочее
	               		|		ПО ИсточникЗатраты.Регистратор = АвансовыйОтчетПрочее.Ссылка
	               		|			И ИсточникЗатраты.НомерСтроки = АвансовыйОтчетПрочее.НомерСтроки
				   		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслуг
	               		|		ПО ИсточникЗатраты.Регистратор = ПоступлениеТоваровУслуг.Ссылка
	               		|			И ИсточникЗатраты.НомерСтроки = ПоступлениеТоваровУслуг.НомерСтроки"
		КонецЦикла;
		ТекстЗапроса=СтрЗаменить(ТекстЗапроса,"//%ОБЪЕДИНИТЬ ВСЕ%",Кусок);
		
		//СУММА(СуммыПрошлыхПериодов)
		Кусок="";
		Для Сч=0 По КолВоПериодов Цикл
			Индекс=Строка(Сч);
			Кусок=Кусок+","+"СУММА(СуммаОборот"+Индекс+"),";
			Кусок=Кусок+"СУММА(Дельта"+Индекс+"),";
			Кусок=Кусок+"100*ВЫБОР КОГДА СУММА(ЕстьNull(ИсточникДанных.СуммаОборот"+Индекс+",0))=0 ТОГДА 1 ИНАЧЕ (Сумма(ИсточникДанных.СуммаОборот)-Сумма(ИсточникДанных.СуммаОборот"+Индекс+"))/СУММА(ИсточникДанных.СуммаОборот"+Индекс+") Конец КАК ДельтаПроцент"+Индекс;
		КонецЦикла;
		ТекстЗапроса=СтрЗаменить(ТекстЗапроса,"//%СУММА(СуммыПрошлыхПериодов)%",Кусок);
		
		Для Каждого Эл Из ПериодыСравнения Цикл
			Индекс		=Строка(Эл.НомерСтроки-1);
			ПредПериода	=ПредставлениеПериода(НачалоДня(Эл.ДатаНачала),КонецДня(Эл.ДатаОкончания));
			УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("ДатаНач"+Индекс,Новый Граница(НачалоДня(Эл.ДатаНачала),ВидГраницы.Включая));
			УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("ДатаКон"+Индекс,Новый Граница(КонецДня(Эл.ДатаОкончания),ВидГраницы.Включая));
			
			// УниверсальныйОтчет.ДобавитьПоказатель(<ИмяПоказателя>, <ПредставлениеПоказателя>, <ВключенПоУмолчанию>, <Формат>, <ИмяГруппы>, <ПредставлениеГруппы>);
			УниверсальныйОтчет.ДобавитьПоказатель("СуммаОборот"+Индекс, "Сумма", Истина, "ЧЦ=15; ЧДЦ=2","Группа"+Индекс,"Обороты за "+ПредПериода);
			УниверсальныйОтчет.ДобавитьПоказатель("Дельта"+Индекс, "Дельта", Истина, "ЧЦ=15; ЧДЦ=2","Группа"+Индекс);
			УниверсальныйОтчет.ДобавитьПоказатель("ДельтаПроцент"+Индекс, "Дельта %", Истина, "ЧЦ=15; ЧДЦ=2","Группа"+Индекс);
		КонецЦикла;
	КонецЕсли;
		
	// В универсальном отчете включен флаг использования свойств и категорий.
	Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
		
		// Добавление свойств и категорий поля запроса в таблицу полей.
		// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
		
		// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , <ПсевдонимПоля>, <Представление>, <Назначение>);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля( "ИсточникДанных.НоменклатурнаяГруппа" ,   "НоменклатурнаяГруппа",   "Номенклатурная группа",   ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_НоменклатурныеГруппы);

		// Добавление свойств и категорий в исходный текст запроса.
		УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
		
	КонецЕсли;
		
	// Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СтатьяЗатрат",          "Статья затрат");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "НоменклатурнаяГруппа",  "Номенклатурная группа");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СуммаОборот", 		   "Сумма");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ЭтоИнвестиции", 		   "Инвестиции");
	
	// Добавление показателей
	// Необходимо вызывать для каждого добавляемого показателя.
	// УниверсальныйОтчет.ДобавитьПоказатель(<ИмяПоказателя>, <ПредставлениеПоказателя>, <ВключенПоУмолчанию>, <Формат>, <ИмяГруппы>, <ПредставлениеГруппы>);
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаОборот", "Сумма", Истина, "ЧЦ=15; ЧДЦ=2");
	
	// Добавление предопредедленных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Подразделение");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("СтатьяЗатрат");
	
	// Добавление предопредедленных группировок колонок отчета.
	// Необходимо вызывать для каждой добавляемой группировки колонки.
	// УниверсальныйОтчет.ДобавитьИзмерениеКолонки(<ПутьКДанным>);
	
	// Добавление предопредедленных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	// УниверсальныйОтчет.ДобавитьОтбор(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьОтбор("ПодразделениеВладелец");
	УниверсальныйОтчет.ДобавитьОтбор("Подразделение");
	УниверсальныйОтчет.ДобавитьОтбор("СтатьяЗатрат");
	//УниверсальныйОтчет.ДобавитьОтбор("Заказ");
	УниверсальныйОтчет.ДобавитьОтбор("НоменклатурнаяГруппа");
	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДаннымРодитель>);
	
	// Установка представлений полей
	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	// Установка типов значений свойств в отборах отчета
	УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("Затрата.ЕдиницаХраненияОстатков");
	
КонецПроцедуры // УстановитьНачальныеНастройки()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА 
	
// Процедура формирования отчета
//
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	
	// Перед формирование отчета можно установить необходимые параметры универсального отчета.
	
	УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент);

КонецПроцедуры // СформироватьОтчет()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обработки расшифровки
//
Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
	
	// Дополнительные параметры в расшифровывающий отчет можно передать
	// посредством инициализации переменной "ДополнительныеПараметры".
	
	ДополнительныеПараметры = УправлениеОтчетами.СохранитьРеквизитыОтчета(ЭтотОбъект);
	УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру для сохранения настроек отчета
//
Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
	
	УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
	Масс=Новый Массив;
	Для Каждого СтрокаДерева ИЗ СтруктураСНастройками.Показатели.Строки Цикл
		Если СтрокаДерева.Представление<>"Сумма" Тогда
			Масс.Добавить(СтрокаДерева);
		КонецЕсли;
	КонецЦикла;
	Для Каждого Эл Из Масс Цикл
		СтруктураСНастройками.Показатели.Строки.Удалить(Эл);
	КонецЦикла;
	УправлениеОтчетами.СохранитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	
КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки отчета из структуры сохраненных настроек
//
Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	УправлениеОтчетами.ВосстановитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
	
КонецФункции // ВосстановитьНастройкиИзСтруктуры()

// Содержит значение используемого режима ввода периода.
// Тип: Число.
// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 4 - месяц, 5 - квартал, 6 - полугодие, 7 - год
// Значение по умолчанию: 0
// Пример:
// УниверсальныйОтчет.мРежимВводаПериода = 1;

#КонецЕсли
